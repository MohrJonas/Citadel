#!/usr/bin/env python3
# Run the given command and arguments with set XAUTHORITY and DISPLAY environment variable
# Usage: run-with-display command [args]

from glob import glob
from typing import Optional
from os import execvp, environ
from os.path import basename
from sys import exit, stdout, argv

from citadel.utils.logger import create_logger
from citadel.utils.misc import first_or_none

logger = create_logger("citadel_run_with_display")

if len(argv) <= 1:
    logger.error("Wrong number of arguments, expected > 1, got %s", len(argv))
    exit(1)

def get_x11_socket_path() -> Optional[str]:
    return first_or_none(glob("/tmp/.X11-unix/X[0-9]*"))

def get_xauth_file_path() -> Optional[str]:
    return first_or_none(glob("/run/lightdm/*/xauthority"))

logger.info("Attempting to acquire x11 socket path")
x11_socket_path = get_x11_socket_path()
logger.info("Got x11 socket path %s", x11_socket_path)
if x11_socket_path is None:
    logger.warning("Unable to find x11 socket path, exiting")
    exit(1)

logger.info("Attempting to get xauthority file path")
xauth_file_path = get_xauth_file_path()
logger.info("Got xauthority file path %s", xauth_file_path)
if xauth_file_path is None:
    logger.warning("Unable to get xauthority file path, exiting")
    exit(1)

environ["DISPLAY"] = f":{basename(x11_socket_path)[1:]}"
environ["XAUTHORITY"] = xauth_file_path

logger.info("run-with-display done, replacing process")
stdout.flush()
execvp(argv[1], argv[1:])